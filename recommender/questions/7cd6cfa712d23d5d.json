{
	"title": "Java Substring",
	"domain": "java",
	"subdomain": "java-strings",
	"text": "<p>We define the following terms:</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Lexicographical_order\">Lexicographical Order</a>, also known as <em>alphabetic</em> or <em>dictionary</em> order, orders characters as follows: <br/>\n</p>\n<p>For example, <code>ball &lt; cat</code>, <code>dog &lt; dorm</code>, <code>Happy &lt; happy</code>, <code>Zoo &lt; ball</code>.</p>\n<p>Given a string, <span class=\"MathJax_SVG\" id=\"MathJax-Element-2-Frame\" style=\"font-size: 100%; display: inline-block;\"><svg focusable=\"false\" height=\"1.676ex\" role=\"img\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -576.1 469.5 721.6\" width=\"1.09ex\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\" stroke-width=\"1\"></path></g></svg></span>, and an integer, <span class=\"MathJax_SVG\" id=\"MathJax-Element-3-Frame\" style=\"font-size: 100%; display: inline-block;\"><svg focusable=\"false\" height=\"2.176ex\" role=\"img\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 521.5 936.9\" width=\"1.211ex\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\" stroke-width=\"1\"></path></g></svg></span>, complete the function so that it finds the lexicographically <em>smallest</em> and <em>largest</em> substrings of length <span class=\"MathJax_SVG\" id=\"MathJax-Element-4-Frame\" style=\"font-size: 100%; display: inline-block;\"><svg focusable=\"false\" height=\"2.176ex\" role=\"img\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 521.5 936.9\" width=\"1.211ex\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\" stroke-width=\"1\"></path></g></svg></span>. </p>\n<p><strong>Input Format</strong></p>\n<p>The first line contains a string denoting <span class=\"MathJax_SVG\" id=\"MathJax-Element-1-Frame\" style=\"font-size: 100%; display: inline-block;\"><svg focusable=\"false\" height=\"1.676ex\" role=\"img\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -576.1 469.5 721.6\" width=\"1.09ex\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\" stroke-width=\"1\"></path></g></svg></span>. <br/>\nThe second line contains an integer denoting <span class=\"MathJax_SVG\" id=\"MathJax-Element-2-Frame\" style=\"font-size: 100%; display: inline-block;\"><svg focusable=\"false\" height=\"2.176ex\" role=\"img\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 521.5 936.9\" width=\"1.211ex\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\" stroke-width=\"1\"></path></g></svg></span>.</p>\n<p><strong>Constraints</strong></p>\n<p><strong>Output Format</strong></p>\n<p>Return the respective lexicographically smallest and largest substrings as a single newline-separated string.</p>\n<p><strong>Sample Input 0</strong></p>\n<p><strong>Sample Output 0</strong></p>\n<p><strong>Explanation 0</strong></p>\n<p>String <span class=\"MathJax_SVG\" id=\"MathJax-Element-1-Frame\" style=\"font-size: 100%; display: inline-block;\"><svg focusable=\"false\" height=\"2.509ex\" role=\"img\" style=\"vertical-align: -0.838ex;\" viewbox=\"0 -719.6 9686.1 1080.4\" width=\"22.497ex\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\" stroke-width=\"1\"></path><g transform=\"translate(747,0)\"><path d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\" stroke-width=\"1\"></path></g><g transform=\"translate(1803,0)\"><path d=\"M122 575Q122 593 137 608T173 623Q196 623 210 608T225 575Q225 562 218 464Q212 373 211 361T201 341Q193 333 173 333Q154 333 146 341Q138 348 137 360T129 464Q122 561 122 575ZM299 575Q299 593 314 608T350 623Q373 623 387 608T402 575Q402 562 395 464Q389 373 388 361T378 341Q370 333 350 333Q331 333 323 341Q315 348 314 360T306 464Q299 561 299 575Z\" stroke-width=\"1\"></path><path d=\"M54 355Q16 355 16 388V393Q16 423 37 430Q41 431 125 431H162Q206 431 218 425T230 393Q230 366 212 358Q206 355 174 355Q141 355 141 354L150 296Q181 110 181 89V84Q182 85 183 96Q185 118 199 173T218 237Q223 247 245 259H264H268Q294 259 309 240Q315 229 329 174T343 92Q343 84 344 84V86Q344 88 344 91T345 97Q347 125 356 187T374 301T383 354Q383 355 350 355H333Q314 355 304 362T294 393Q294 420 312 428Q318 431 401 431H440Q485 431 496 425T508 393Q508 382 508 377T498 363T470 355L455 354Q455 353 441 271T413 104T396 16Q384 -4 355 -4H351Q315 -4 305 9T280 79Q278 90 276 96Q265 149 265 169Q265 176 264 169Q263 166 263 162Q261 130 248 79T230 18Q220 -4 183 -4H175L151 -3Q134 5 127 17L112 102Q97 188 83 270T69 354Q62 355 54 355Z\" stroke-width=\"1\" transform=\"translate(525,0)\"></path><path d=\"M48 217Q48 295 100 361T248 439L258 440Q268 440 274 440Q329 438 369 416T428 359T456 292T464 228Q464 215 461 208T454 198T442 190L288 189H135L138 179Q153 132 199 102T303 71Q336 71 353 86T380 120T398 143Q404 146 422 146Q453 146 462 126Q464 120 464 116Q464 84 416 39T285 -6Q187 -6 118 59T48 217ZM377 264Q371 291 365 306T341 338T294 362Q288 363 264 363Q225 363 190 336T139 264H377Z\" stroke-width=\"1\" transform=\"translate(1051,0)\"></path><path d=\"M51 573Q51 602 73 610H76Q79 610 84 610T97 610T113 610T133 611T155 611T179 611H282Q301 598 304 586V76H452Q466 67 470 60T474 38Q474 10 452 1H73Q51 9 51 32V38Q51 54 54 60T73 76H220V535H146L73 536Q51 545 51 567V573Z\" stroke-width=\"1\" transform=\"translate(1576,0)\"></path><path d=\"M291 -6Q196 -6 131 60T66 216Q66 296 119 361Q154 403 200 421T273 439Q275 440 293 440H313Q400 440 433 409Q454 388 454 359Q454 335 439 321T402 306Q380 306 365 321T350 357V362L340 363Q339 363 326 363T303 364Q280 364 266 362Q217 352 184 313T151 215Q151 153 199 112T313 70Q341 70 357 85T381 118T394 140Q402 146 424 146Q443 146 447 144Q466 137 466 117Q466 106 457 88T429 47T374 10T291 -6Z\" stroke-width=\"1\" transform=\"translate(2102,0)\"></path><path d=\"M52 216Q52 318 118 379T261 440Q343 440 407 378T472 216Q472 121 410 58T262 -6Q176 -6 114 58T52 216ZM388 225Q388 281 351 322T261 364Q213 364 175 325T136 225Q136 158 174 114T262 70T350 114T388 225Z\" stroke-width=\"1\" transform=\"translate(2627,0)\"></path><path d=\"M133 76Q156 74 164 67T172 38Q172 9 151 1H11Q-12 8 -12 38Q-12 61 5 73Q10 75 28 76H45V355H28Q10 356 5 358Q-12 370 -12 393Q-12 419 11 431H52H70Q91 431 100 427T116 405Q163 436 200 436Q255 436 281 390L285 394Q289 398 292 400T301 407T314 415T329 423T346 429T366 434T389 436H392Q425 436 448 411Q469 390 474 360T480 268V232V203V76H497Q520 74 528 67T536 38Q536 9 515 1H396Q374 9 374 32V38Q374 73 402 76H409V191V242Q409 317 404 339T375 361Q343 361 323 332T299 264Q298 258 298 165V76H315Q338 74 346 67T354 38Q354 9 333 1H214Q192 9 192 32V38Q192 73 220 76H227V191V242Q227 317 222 339T193 361Q161 361 141 332T117 264Q116 258 116 165V76H133Z\" stroke-width=\"1\" transform=\"translate(3153,0)\"></path><path d=\"M48 217Q48 295 100 361T248 439L258 440Q268 440 274 440Q329 438 369 416T428 359T456 292T464 228Q464 215 461 208T454 198T442 190L288 189H135L138 179Q153 132 199 102T303 71Q336 71 353 86T380 120T398 143Q404 146 422 146Q453 146 462 126Q464 120 464 116Q464 84 416 39T285 -6Q187 -6 118 59T48 217ZM377 264Q371 291 365 306T341 338T294 362Q288 363 264 363Q225 363 190 336T139 264H377Z\" stroke-width=\"1\" transform=\"translate(3678,0)\"></path><path d=\"M25 395Q26 405 26 408T29 416T35 423T48 431H145V481L146 532Q154 547 161 550T184 554H189Q218 554 227 534Q229 529 229 480V431H405Q406 430 411 427T418 422T422 416T426 407T427 393Q427 387 427 382T424 374T421 368T417 363T413 360T408 358L405 356L317 355H229V249Q229 237 229 214T228 179Q228 126 241 98T295 70Q354 70 365 149Q366 167 375 174Q383 182 407 182H415Q438 182 446 166Q448 161 448 148Q448 84 398 39T282 -6Q226 -6 189 29T146 128Q145 134 145 247V355H96H72Q45 355 35 362T25 395Z\" stroke-width=\"1\" transform=\"translate(4204,0)\"></path><path d=\"M52 216Q52 318 118 379T261 440Q343 440 407 378T472 216Q472 121 410 58T262 -6Q176 -6 114 58T52 216ZM388 225Q388 281 351 322T261 364Q213 364 175 325T136 225Q136 158 174 114T262 70T350 114T388 225Z\" stroke-width=\"1\" transform=\"translate(4729,0)\"></path><path d=\"M261 559Q261 580 277 596T319 612Q342 612 359 597T376 560T360 523T320 507Q296 507 279 523T261 559ZM75 -91T100 -91T138 -107T152 -144V-150L160 -151H193H203Q241 -151 267 -121Q284 -97 288 -73T292 23V151V355H218L145 356Q123 365 123 387V393Q123 422 145 430H148Q151 430 156 430T169 430T185 430T205 431T227 431T251 431H354Q356 430 360 427T365 424T369 420T372 416T373 410T375 402T376 391T377 376T377 356Q377 345 377 286T376 176Q376 -67 371 -88Q362 -123 342 -151T299 -194Q254 -228 180 -228Q84 -226 56 -177Q49 -162 48 -148Q48 -122 61 -107Z\" stroke-width=\"1\" transform=\"translate(5255,0)\"></path><path d=\"M126 306Q105 306 90 321T74 359Q74 439 211 439Q268 439 276 438Q343 426 383 390T430 306Q431 301 431 190V81Q446 79 465 78T492 76T509 72T521 60T524 38Q524 11 506 3Q502 1 466 1Q426 1 406 5T379 14T355 36L345 30Q284 -6 205 -6Q135 -6 92 39T48 141Q48 182 79 212T158 256T252 278T342 285H347V290Q347 315 325 335T267 362Q258 363 224 363Q189 363 185 362H179L178 358Q178 353 178 352T176 345T174 337T170 330T165 322T158 316T150 311T139 308T126 306ZM132 140Q132 115 157 93T224 70Q269 70 302 87T344 133Q346 139 347 175V211H339Q256 209 194 190T132 140Z\" stroke-width=\"1\" transform=\"translate(5780,0)\"></path><path d=\"M24 392Q24 417 36 424T79 432Q85 432 103 432T132 431H215Q229 422 233 415T237 393Q237 355 198 355H193H172L262 77L352 355H331H323Q288 355 288 393Q288 409 291 415T310 431H478Q491 423 495 416T500 393Q500 364 478 356L452 355H426L374 190Q320 24 318 20Q307 -4 273 -4H262H251Q217 -4 206 20Q204 24 150 190L98 355H72L47 356Q24 363 24 392Z\" stroke-width=\"1\" transform=\"translate(6306,0)\"></path><path d=\"M126 306Q105 306 90 321T74 359Q74 439 211 439Q268 439 276 438Q343 426 383 390T430 306Q431 301 431 190V81Q446 79 465 78T492 76T509 72T521 60T524 38Q524 11 506 3Q502 1 466 1Q426 1 406 5T379 14T355 36L345 30Q284 -6 205 -6Q135 -6 92 39T48 141Q48 182 79 212T158 256T252 278T342 285H347V290Q347 315 325 335T267 362Q258 363 224 363Q189 363 185 362H179L178 358Q178 353 178 352T176 345T174 337T170 330T165 322T158 316T150 311T139 308T126 306ZM132 140Q132 115 157 93T224 70Q269 70 302 87T344 133Q346 139 347 175V211H339Q256 209 194 190T132 140Z\" stroke-width=\"1\" transform=\"translate(6831,0)\"></path><path d=\"M122 575Q122 593 137 608T173 623Q196 623 210 608T225 575Q225 562 218 464Q212 373 211 361T201 341Q193 333 173 333Q154 333 146 341Q138 348 137 360T129 464Q122 561 122 575ZM299 575Q299 593 314 608T350 623Q373 623 387 608T402 575Q402 562 395 464Q389 373 388 361T378 341Q370 333 350 333Q331 333 323 341Q315 348 314 360T306 464Q299 561 299 575Z\" stroke-width=\"1\" transform=\"translate(7357,0)\"></path></g></g></svg></span> has the following lexicographically-ordered substrings of length <span class=\"MathJax_SVG\" id=\"MathJax-Element-2-Frame\" style=\"font-size: 100%; display: inline-block;\"><svg focusable=\"false\" height=\"2.176ex\" role=\"img\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 2356.1 936.9\" width=\"5.472ex\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\" stroke-width=\"1\"></path><g transform=\"translate(799,0)\"><path d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\" stroke-width=\"1\"></path></g><g transform=\"translate(1855,0)\"><path d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\" stroke-width=\"1\"></path></g></g></svg></span>:</p>\n<p></p>\n<p>We then return the first (lexicographically smallest) substring and the last (lexicographically largest) substring as two newline-separated values (i.e., <code>ava\\nwel</code>).</p>\n<p>The stub code in the editor then prints <code>ava</code> as our first line of output and <code>wel</code> as our second line of output.</p>\n<p class=\"mlB\" data-reactid=\"127\"><strong data-reactid=\"128\">Need Help?</strong></p>\n<p class=\"bold zeta\" data-reactid=\"152\">Rate This Challenge: </p>\n<p class=\"mjB\" data-reactid=\"171\">You can always change back later.</p>\n<p data-reactid=\"203\" style=\"font-size:14px;margin-top:5px;margin-bottom:0px;\"><span class=\"internal-links\" data-reactid=\"204\"><a class=\"calendar\" data-analytics=\"FooterLinkCalendar\" data-reactid=\"205\" href=\"/calendar\" target=\"_blank\">Contest Calendar</a><span data-reactid=\"206\"> | </span><a class=\"blog\" data-analytics=\"FooterLinkBlog\" data-reactid=\"207\" href=\"//blog.hackerrank.com\" target=\"_blank\">Blog</a><span data-reactid=\"208\"> | </span><a class=\"scoring\" data-analytics=\"FooterLinkScoring\" data-reactid=\"209\" href=\"/scoring\" target=\"_blank\">Scoring</a><span data-reactid=\"210\"> | </span><a class=\"environment\" data-analytics=\"FooterLinkEnvironment\" data-reactid=\"211\" href=\"/environment\" target=\"_blank\">Environment</a><span data-reactid=\"212\"> | </span><a class=\"faq\" data-analytics=\"FooterLinkFAQ\" data-reactid=\"213\" href=\"/faq\" target=\"_blank\">FAQ</a><span data-reactid=\"214\"> | </span></span><a data-analytics=\"FooterLinkAboutUs\" data-reactid=\"215\" href=\"/aboutus\" target=\"_blank\">About Us</a><span data-reactid=\"216\"> | </span><a data-analytics=\"FooterLinkSupport\" data-reactid=\"217\" href=\"/support\" target=\"_blank\">Support</a><span data-reactid=\"218\"> | </span><a data-analytics=\"FooterLinkCareers\" data-reactid=\"219\" href=\"/careers\" target=\"_blank\">Careers</a><span data-reactid=\"220\"> | </span><a data-analytics=\"FooterLinkTermsOfService\" data-reactid=\"221\" href=\"/terms-of-service\" target=\"_blank\">Terms Of Service</a><span data-reactid=\"222\"> | </span><a data-analytics=\"FooterLinkPrivacyPolicy\" data-reactid=\"223\" href=\"/privacy\" target=\"_blank\">Privacy Policy</a><span data-reactid=\"224\"> | </span><a class=\"featureRequestButton\" data-analytics=\"FooterLinkFeatureRequest\" data-reactid=\"225\" href=\"/support/feature\" target=\"_blank\">Request a Feature</a></p>\n"
}